{"version":3,"sources":["special/Routes.js","components/MainNavbar.js","special/Hook.js","App.js","reportWebVitals.js","index.js"],"names":["Home","lazy","Citations","NotFound","Routes","exact","path","component","MainNavbar","props","Navbar","fixed","Brand","style","marginLeft","className","to","ScrollToTop","pathname","useLocation","useEffect","window","scrollTo","App","id","Helmet","fallback","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8MAGMA,EAAOC,gBAAK,kBAAM,sDAClBC,EAAYD,gBAAK,kBAAM,gCACvBE,EAAWF,gBAAK,kBAAM,gCAYbG,MAVf,WACI,OACI,eAAC,IAAD,WACI,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWP,IACjC,cAAC,IAAD,CAAOM,KAAK,aAAaC,UAAWL,IACpC,cAAC,IAAD,CAAOK,UAAWJ,Q,QCOfK,MAff,SAAoBC,GAElB,OACI,8BACE,cAACC,EAAA,EAAD,CAAQC,MAAM,MAAd,SACE,cAACD,EAAA,EAAOE,MAAR,UACE,cAAC,IAAD,CAAMC,MAAO,CAACC,WAAY,QAASC,UAAU,uBAAuBC,GAAG,IAAvE,2BCJG,SAASC,IAAe,IAC7BC,EAAaC,cAAbD,SAMR,OAJAE,qBAAU,WACRC,OAAOC,SAAS,EAAG,KAClB,CAACJ,IAEG,K,YCeMK,MAhBf,WACE,OACE,sBAAKC,GAAG,YAAR,UACE,cAACC,EAAA,EAAD,UACE,kDAEF,eAAC,IAAD,WACE,cAACR,EAAD,IACA,cAAC,EAAD,IACE,qBAAKO,GAAG,eAAR,SAAuB,cAAC,WAAD,CAAUE,SAAU,wBAApB,SAAiC,cAAC,EAAD,eCTnDC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCFdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.e3becd4d.chunk.js","sourcesContent":["import React, {lazy} from 'react';\r\nimport {Route, Switch} from 'react-router-dom';\r\n\r\nconst Home = lazy(() => import('../pages/Home'));\r\nconst Citations = lazy(() => import('../pages/Citations'));\r\nconst NotFound = lazy(() => import('../pages/NotFound'));\r\n\r\nfunction Routes(){\r\n    return(\r\n        <Switch>\r\n            <Route exact path=\"/\" component={Home}/>\r\n            <Route path=\"/citations\" component={Citations}/>\r\n            <Route component={NotFound}/>\r\n        </Switch>\r\n    )\r\n};\r\n\r\nexport default Routes;","import React from 'react';\r\nimport { Navbar } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction MainNavbar(props) {\r\n\r\n  return (\r\n      <div>\r\n        <Navbar fixed=\"top\">\r\n          <Navbar.Brand>\r\n            <Link style={{marginLeft: '1rem'}} className=\"site-title nav-props\" to=\"/\">\r\n              Grubsy\r\n            </Link>\r\n          </Navbar.Brand>\r\n        </Navbar>\r\n      </div>\r\n  );\r\n}\r\n\r\nexport default MainNavbar;","import { useEffect } from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\n// Special component used to make it so we always scroll to top\r\n// of page rather than it stays scrolled down even when we navigate out\r\n\r\nexport default function ScrollToTop() {\r\n  const { pathname } = useLocation();\r\n\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n  }, [pathname]);\r\n\r\n  return null;\r\n}","import { Suspense } from 'react';\r\nimport { Helmet } from 'react-helmet';\r\nimport { HashRouter as Router } from 'react-router-dom';\r\n\r\nimport Routes from './special/Routes';\r\nimport MainNavbar from './components/MainNavbar';\r\nimport ScrollToTop from './special/Hook';\r\n// import Footer from './components/Footer';\r\n\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './css/index.scss';\r\n\r\nfunction App() {\r\n  return (\r\n    <div id=\"container\">\r\n      <Helmet>\r\n        <title>Freeman Liu</title>\r\n      </Helmet>\r\n      <Router>\r\n        <ScrollToTop/>\r\n        <MainNavbar/>\r\n          <div id=\"main-content\"><Suspense fallback={<div></div>}><Routes/></Suspense></div>\r\n        {/* <Footer/> */}\r\n      </Router>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}